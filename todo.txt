- limited antennas, must be placed either (done)
	- randomly (all around or just layer 0)
		- can designate # of links per layer
	- user defined
		- add parameter similar to non uniform chiplet to routers with wireless links

- add new port in topology file
	- wireless should be connected to all other wireless ones (fully-connected)
	- link must be variable bandwidth (new in garnet3.0)
		- set all variable bandwidth links to the same number (32)
	- routers with wireless should be different from other routers 
	- test variable bandwidt links
		- in 2D 3x3 topology, have some links be 32, others 4
		- what happens when the packet goes from 32 -> 4? Is the serdes used?

- routing algorithm must change to incorporate wireless routing
- must place restrictions
	- ex: only packets originating from 1,2,3,4 can go to antenna on router one
- compare number of hops between current and destination (wired VS wireless)
	- z value of current + z value of destination + difference in x + difference in y
	- distance to closest antenna from current + distance to closest antenna from dest
	- travel normally XYZ, check to see if current router has an antenna, and if it does, then do the calculation 

		bool RWiNoCProcessingElement::wirelessAdvised(RWiNoCHubCoord position, RWiNoCHubCoord dst_hub)
		{
			int closestWiHub = findClosestWiHub(position, dst_hub); //Vasil added position as first input argument

			if (closestWiHub == position.subnet)
				return false;

			int wiredDistance = calcHops_betweenHubs(position, dst_hub);
			int longRangeDistance = 1 + calcHops_betweenHubs(subnetNum2HubCoord(closestWiHub), dst_hub);

			if (longRangeDistance < wiredDistance)
				return true;
			else
				return false;
		}

- start with 2x2x1 topology
- https://www.youtube.com/embed/AH9r44r2lHA
(13:47)
	-started VBL_MeshXY and VBL_MeshXYZ topologies
	-error when using src_serdes & dst_serdes